import { SimpleTranslationEntries } from "#app/interfaces/locales";

export const battle: SimpleTranslationEntries = {
  "bossAppeared": "{{bossName}}が あらわれた！",
  "trainerAppeared": "{{trainerName}}が\nしょうぶを しかけてきた！",
  "trainerAppearedDouble": "{{trainerName}}\nが しょうぶを しかけてきた！",
  "trainerSendOut": "{{trainerName}}は\n{{pokemonName}}を くりだした！",
  "singleWildAppeared": "あっ！ やせいの\n{{pokemonName}}が とびだしてきた！",
  "multiWildAppeared": "あっ！ やせいの {{pokemonName1}}と\n{{pokemonName2}}が とびだしてきた！",
  "playerComeBack": "{{pokemonName}}! もどれ！",
  "trainerComeBack": "{{trainerName}}は\n{{pokemonName}}を ひっこめた！",
  "playerGo": "ゆけっ！ {{pokemonName}}！",
  "trainerGo": "{{trainerName}}は\n{{pokemonName}}を くりだした！",
  "switchQuestion": "{{pokemonName}}を\nいれかえますか？",
  "trainerDefeated": "{{trainerName}}\nとの しょうぶに かった！",
  "moneyWon": "しょうきんとして\n₽{{moneyAmount}} てにいれた！",
  "moneyPickedUp": "You picked up ₽{{moneyAmount}}!",
  "pokemonCaught": "{{pokemonName}}を\nつかまえたぞ！",
  "addedAsAStarter": "{{pokemonName}} has been\nadded as a starter!",
  "partyFull": "てもちがいっぱいです。\n{{pokemonName}}をいれるために ポケモンを ひとり てばなしますか？",
  "pokemon": "ポケモン",
  "sendOutPokemon": "がんばれ！ {{pokemonName}}！",
  "hitResultCriticalHit": "きゅうしょに あたった！",
  "hitResultSuperEffective": "こうかは ばつぐんだ！",
  "hitResultNotVeryEffective": "こうかは いまひとつの ようだ……",
  "hitResultNoEffect": "{{pokemonName}}には こうかが ないようだ…",
  "hitResultOneHitKO": "いちげき ひっさつ！",
  "attackFailed": "しかし うまく きまらなかった！！",
  "attackMissed": "{{pokemonNameWithAffix}} avoided the attack!",
  "attackHitsCount": "{{count}}かい あたった！",
  "rewardGain": "You received\n{{modifierName}}!",
  "expGain": "{{pokemonName}}は\n{{exp}}けいけんちを もらった！",
  "levelUp": "{{pokemonName}}は\nレベル{{level}} に あがった！",
  "learnMove": "{{pokemonName}}は あたらしく\n{{moveName}}を おぼえた！",
  "learnMovePrompt": "{{pokemonName}}は あたらしく\n{{moveName}}を おぼえたい……",
  "learnMoveLimitReached": "しかし {{pokemonName}}は わざを 4つ\nおぼえるので せいいっぱいだ！",
  "learnMoveReplaceQuestion": "{{moveName}}の かわりに\nほかの わざを わすれさせますか？",
  "learnMoveStopTeaching": "それでは…… {{moveName}}を\nおぼえるのを あきらめますか？",
  "learnMoveNotLearned": "{{pokemonName}}は {{moveName}}を\nおぼえずに おわった！",
  "learnMoveForgetQuestion": "どの わざを\nわすれさせたい？",
  "learnMoveForgetSuccess": "{{pokemonName}}は {{moveName}}の\nつかいかたを きれいに わすれた！",
  "countdownPoof": "@d{32}1, @d{15}2, and@d{15}… @d{15}… @d{15}… @d{15}@s{pb_bounce_1}ポーン！",
  "learnMoveAnd": "そして…",
  "levelCapUp": "レベルキャップが\n{{levelCap}}に あがった！",
  "moveNotImplemented": "{{moveName}}は まだじっそうされておらず、せんたくできません。",
  "moveNoPP": "しかし わざの\nのこりポイントが なかった！",
  "moveDisabled": "{{moveName}} is disabled!",
  "noPokeballForce": "An unseen force\nprevents using Poké Balls.",
  "noPokeballTrainer": "ひとの ものを\nとったら どろぼう！",
  "noPokeballMulti": "You can only throw a Poké Ball\nwhen there is one Pokémon remaining!",
  "noPokeballStrong": "あいての ポケモンが つよすぎて つかまえられない！\nまずは よわらせよう！",
  "noEscapeForce": "An unseen force\nprevents escape.",
  "noEscapeTrainer": "ダメだ！ しょうぶのさいちゅうに\nあいてに せなかを みせられない！",
  "noEscapePokemon": "{{pokemonName}}'s {{moveName}}\nprevents {{escapeVerb}}!",
  "runAwaySuccess": " うまく にげきれた！",
  "runAwayCannotEscape": "にげることが できない！",
  "escapeVerbSwitch": "switching",
  "escapeVerbFlee": "fleeing",
  "notDisabled": "{{pokemonName}}'s {{moveName}} is disabled\nno more!",
  "turnEndHpRestore": "{{pokemonName}}'s HP was restored.",
  "hpIsFull": "{{pokemonName}}'s\nHP is full!",
  "skipItemQuestion": "Are you sure you want to skip taking an item?",
  "eggHatching": "おや？",
  "ivScannerUseQuestion": "Use IV Scanner on {{pokemonName}}?",
  "wildPokemonWithAffix": "やせいの {{pokemonName}}",
  "foePokemonWithAffix": "あいての {{pokemonName}}",
  "useMove": "{{pokemonNameWithAffix}}の {{moveName}}！",
  "drainMessage": "{{pokemonName}}は\nたいりょくを すいとった！",
  "regainHealth": "{{pokemonName}}は\nたいりょくを かいふくした！",
  "stealEatBerry": "{{pokemonName}} stole and ate\n{{targetName}}'s {{berryName}}!",
  "ppHealBerry": "{{pokemonNameWithAffix}} restored PP to its move {{moveName}}\nusing its {{berryName}}!",
  "hpHealBerry": "{{pokemonNameWithAffix}} restored its health using\nits {{berryName}}!",
  "fainted": "{{pokemonNameWithAffix}}は たおれた！",
  "statsAnd": "and",
  "stats": "Stats",
  "statRose_one": "{{pokemonNameWithAffix}}の\n{{stats}} あがった！",
  "statRose_other": "{{pokemonNameWithAffix}}の\n{{stats}} あがった！",
  "statSharplyRose_one": "{{pokemonNameWithAffix}}の\n{{stats}} ぐーんと あがった！",
  "statSharplyRose_other": "{{pokemonNameWithAffix}}の\n{{stats}} ぐーんと あがった！",
  "statRoseDrastically_one": "{{pokemonNameWithAffix}}の\n{{stats}} ぐぐーんと あがった！",
  "statRoseDrastically_other": "{{pokemonNameWithAffix}}の\n{{stats}} ぐぐーんと あがった！",
  "statWontGoAnyHigher_one": "{{pokemonNameWithAffix}}の\n{{stats}} もう あがらない！",
  "statWontGoAnyHigher_other": "{{pokemonNameWithAffix}}の\n{{stats}} もう あがらない！",
  "statFell_one": "{{pokemonNameWithAffix}}の\n{{stats}} さがった！",
  "statFell_other": "{{pokemonNameWithAffix}}の\n{{stats}} さがった！",
  "statHarshlyFell_one": "{{pokemonNameWithAffix}}の\n{{stats}} がくっと さがった！",
  "statHarshlyFell_other": "{{pokemonNameWithAffix}}の\n{{stats}} がくっと さがった！",
  "statSeverelyFell_one": "{{pokemonNameWithAffix}}の\n{{stats}} がくーんと さがった！",
  "statSeverelyFell_other": "{{pokemonNameWithAffix}}の\n{{stats}} がくーんと さがった！",
  "statWontGoAnyLower_one": "{{pokemonNameWithAffix}}の\n{{stats}} もう さがらない！",
  "statWontGoAnyLower_other": "{{pokemonNameWithAffix}}の\n{{stats}} もう さがらない！",
  "transformedIntoType": "{{pokemonName}} transformed\ninto the {{type}} type!",
  "retryBattle": "Would you like to retry from the start of the battle?",
  "unlockedSomething": "{{unlockedThing}}\nhas been unlocked.",
  "congratulations": "Congratulations!",
  "beatModeFirstTime": "{{speciesName}} beat {{gameMode}} Mode for the first time!\nYou received {{newModifier}}!",
  "ppReduced": "It reduced the PP of {{targetName}}'s\n{{moveName}} by {{reduction}}!",
  "battlerTagsRechargingLapse": "{{pokemonNameWithAffix}} must\nrecharge!",
  "battlerTagsTrappedOnAdd": "{{pokemonNameWithAffix}} can no\nlonger escape!",
  "battlerTagsTrappedOnRemove": "{{pokemonNameWithAffix}} was freed\nfrom {{moveName}}!",
  "battlerTagsFlinchedLapse": "{{pokemonNameWithAffix}} flinched!",
  "battlerTagsConfusedOnAdd": "{{pokemonNameWithAffix}} became\nconfused!",
  "battlerTagsConfusedOnRemove": "{{pokemonNameWithAffix}} snapped\nout of confusion!",
  "battlerTagsConfusedOnOverlap": "{{pokemonNameWithAffix}} is\nalready confused!",
  "battlerTagsConfusedLapse": "{{pokemonNameWithAffix}} is\nconfused!",
  "battlerTagsConfusedLapseHurtItself": "It hurt itself in its\nconfusion!",
  "battlerTagsDestinyBondLapseIsBoss": "{{pokemonNameWithAffix}} is unaffected\nby the effects of Destiny Bond.",
  "battlerTagsDestinyBondLapse": "{{pokemonNameWithAffix}} took\n{{pokemonNameWithAffix2}} down with it!",
  "battlerTagsInfatuatedOnAdd": "{{pokemonNameWithAffix}} fell in love\nwith {{sourcePokemonName}}!",
  "battlerTagsInfatuatedOnOverlap": "{{pokemonNameWithAffix}} is\nalready in love!",
  "battlerTagsInfatuatedLapse": "{{pokemonNameWithAffix}} is in love\nwith {{sourcePokemonName}}!",
  "battlerTagsInfatuatedLapseImmobilize": "{{pokemonNameWithAffix}} is\nimmobilized by love!",
  "battlerTagsInfatuatedOnRemove": "{{pokemonNameWithAffix}} got over\nits infatuation.",
  "battlerTagsSeededOnAdd": "{{pokemonNameWithAffix}} was seeded!",
  "battlerTagsSeededLapse": "{{pokemonNameWithAffix}}'s health is\nsapped by Leech Seed!",
  "battlerTagsSeededLapseShed": "{{pokemonNameWithAffix}}'s Leech Seed\nsucked up the liquid ooze!",
  "battlerTagsNightmareOnAdd": "{{pokemonNameWithAffix}} began\nhaving a Nightmare!",
  "battlerTagsNightmareOnOverlap": "{{pokemonNameWithAffix}} is\nalready locked in a Nightmare!",
  "battlerTagsNightmareLapse": "{{pokemonNameWithAffix}} is locked\nin a Nightmare!",
  "battlerTagsEncoreOnAdd": "{{pokemonNameWithAffix}} got\nan Encore!",
  "battlerTagsEncoreOnRemove": "{{pokemonNameWithAffix}}'s Encore\nended!",
  "battlerTagsHelpingHandOnAdd": "{{pokemonNameWithAffix}} is ready to\nhelp {{pokemonName}}!",
  "battlerTagsIngrainLapse": "{{pokemonNameWithAffix}} absorbed\nnutrients with its roots!",
  "battlerTagsIngrainOnTrap": "{{pokemonNameWithAffix}} planted its roots!",
  "battlerTagsAquaRingOnAdd": "{{pokemonNameWithAffix}} surrounded\nitself with a veil of water!",
  "battlerTagsAquaRingLapse": "{{moveName}} restored\n{{pokemonName}}'s HP!",
  "battlerTagsDrowsyOnAdd": "{{pokemonNameWithAffix}} grew drowsy!",
  "battlerTagsDamagingTrapLapse": "{{pokemonNameWithAffix}} is hurt\nby {{moveName}}!",
  "battlerTagsBindOnTrap": "{{pokemonNameWithAffix}} was squeezed by\n{{sourcePokemonName}}'s {{moveName}}!",
  "battlerTagsWrapOnTrap": "{{pokemonNameWithAffix}} was Wrapped\nby {{sourcePokemonName}}!",
  "battlerTagsVortexOnTrap": "{{pokemonNameWithAffix}} was trapped\nin the vortex!",
  "battlerTagsClampOnTrap": "{{sourcePokemonNameWithAffix}} Clamped\n{{pokemonName}}!",
  "battlerTagsSandTombOnTrap": "{{pokemonNameWithAffix}} became trapped\nby {{moveName}}!",
  "battlerTagsMagmaStormOnTrap": "{{pokemonNameWithAffix}} became trapped\nby swirling magma!",
  "battlerTagsSnapTrapOnTrap": "{{pokemonNameWithAffix}} got trapped\nby a snap trap!",
  "battlerTagsThunderCageOnTrap": "{{sourcePokemonNameWithAffix}} trapped\n{{pokemonNameWithAffix}}!",
  "battlerTagsInfestationOnTrap": "{{pokemonNameWithAffix}} has been afflicted \nwith an infestation by {{sourcePokemonNameWithAffix}}!",
  "battlerTagsProtectedOnAdd": "{{pokemonNameWithAffix}}\nprotected itself!",
  "battlerTagsProtectedLapse": "{{pokemonNameWithAffix}}\nprotected itself!",
  "battlerTagsEnduringOnAdd": "{{pokemonNameWithAffix}} braced\nitself!",
  "battlerTagsEnduringLapse": "{{pokemonNameWithAffix}} endured\nthe hit!",
  "battlerTagsSturdyLapse": "{{pokemonNameWithAffix}} endured\nthe hit!",
  "battlerTagsPerishSongLapse": "{{pokemonNameWithAffix}}'s perish count fell to {{turnCount}}.",
  "battlerTagsCenterOfAttentionOnAdd": "{{pokemonNameWithAffix}} became the center\nof attention!",
  "battlerTagsTruantLapse": "{{pokemonNameWithAffix}} is\nloafing around!",
  "battlerTagsSlowStartOnAdd": "{{pokemonNameWithAffix}} can't\nget it going!",
  "battlerTagsSlowStartOnRemove": "{{pokemonNameWithAffix}} finally\ngot its act together!",
  "battlerTagsHighestStatBoostOnAdd": "{{pokemonNameWithAffix}}'s {{statName}}\nwas heightened!",
  "battlerTagsHighestStatBoostOnRemove": "The effects of {{pokemonNameWithAffix}}'s\n{{abilityName}} wore off!",
  "battlerTagsMagnetRisenOnAdd": "{{pokemonNameWithAffix}} levitated with electromagnetism!",
  "battlerTagsMagnetRisenOnRemove": "{{pokemonNameWithAffix}}'s electromagnetism wore off!",
  "battlerTagsCritBoostOnAdd": "{{pokemonNameWithAffix}} is getting\npumped!",
  "battlerTagsCritBoostOnRemove": "{{pokemonNameWithAffix}} relaxed.",
  "battlerTagsSaltCuredOnAdd": "{{pokemonNameWithAffix}} is being salt cured!",
  "battlerTagsSaltCuredLapse": "{{pokemonNameWithAffix}} is hurt by {{moveName}}!",
  "battlerTagsCursedOnAdd": "{{pokemonNameWithAffix}} cut its own HP and put a curse on the {{pokemonName}}!",
  "battlerTagsCursedLapse": "{{pokemonNameWithAffix}} is afflicted by the Curse!",
  "battlerTagsStockpilingOnAdd": "{{pokemonNameWithAffix}} stockpiled {{stockpiledCount}}!"
} as const;
